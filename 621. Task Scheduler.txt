class Solution {
public:
    int leastInterval(vector<char>& tasks, int n) {
       unordered_map<char,int> mp;
       for(auto c : tasks) mp[c]++;
      
       priority_queue<int> q;
       for(auto x : mp) q.push(x.second);
       
       vector<int> value;
       int ans = 0;
       while(!q.empty()){
           int time = 0;
           for(int i = 0 ; i<n+1 ; i++){
               if(!q.empty()){
                   value.push_back(q.top()-1);
                   q.pop();
                  time++;
               }
           }
           for(auto x : value)
              if(x) q.push(x);
              value.clear();
             ans += q.empty()?time:n+1;
       }
       return ans;
    }
};