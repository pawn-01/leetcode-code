class Solution {
public:
     int calcu(vector<int>& nums , int s , int e){
         int sum = 0;
         for(int i = s ; i<=e ; i++){
             sum += nums[i];
         }
         return sum;
     }
     bool solve(vector<int>& nums, int s , int e, int& m, vector<vector<int>>& dp){
          if(s==e) return dp[s][e]=true;
         
          if(dp[s][e]!=-1) return dp[s][e];
          for(int i = s; i<e ; i++){
              int sum1 = calcu(nums,s,i); 
              int sum2 = calcu(nums,i+1,e); 
              
              if((i-s+1==1 and sum2>=m) or (e-i==1 and sum1>=m) or (i-s+1==1 and e-i==1)){
                bool op1 = solve(nums,s,i,m,dp);
                bool op2 = solve(nums,i+1,e,m,dp);
                 if(op1 and op2) return dp[s][e] = true;
              }
              
          }
         return dp[s][e] = false;
      }
    bool canSplitArray(vector<int>& nums, int m) {
       vector<vector<int>> dp(101,vector<int>(101,-1));
       return solve(nums,0,nums.size()-1,m,dp);   
    }
};