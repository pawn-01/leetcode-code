typedef pair<int,int> p;
class Solution {
public:
    bool isvalid(int i , int j , int m , int n){
        if(i>=0 and i<m and j>=0 and j<n) return true;
        return false;
    }
   
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
         int m = mat.size();
         int n = mat[0].size();
         vector<vector<int>> ret(m,vector<int>(n,INT_MAX));
         queue<pair<p,int>> q;
         for(int i = 0 ; i<m ; i++){
             for(int j = 0 ; j<n ; j++){
                 if(mat[i][j]==0){
                     ret[i][j] = 0;
                     q.push({{i,j},0});
                 }
             }
         }
        
         while(!q.empty()){
             int x = q.front().first.first;
             int y = q.front().first.second;
             int d = q.front().second;
             int arr1[4] = {-1,0,0,1};
             int arr2[4] = {0,-1,1,0};
         for(int i = 0 ; i<4 ; i++){
             int ni = x+arr1[i];
             int ny = y+arr2[i];
            if(isvalid(ni,ny,m,n) and d+1<ret[ni][ny]){
                 ret[ni][ny]= d+1;
                q.push({{ni,ny},d+1});
                }         
             }
           q.pop();
         }
        
        return ret;
    }
};