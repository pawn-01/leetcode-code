class Solution {
public:
    vector<int> solve(string& s, int i, int e){
        if(i>e) return{};
        bool flag = true;
        vector<int> ans;
        for(int k = i ; k<=e ; k++){
             if(s[k]=='+'){
                 flag = false;
                 vector<int> left = solve(s,i,k-1);
                 vector<int> right = solve(s,k+1,e);
                 for(auto x: left){
                     for(auto y: right){
                        ans.push_back(x+y); 
                     }
                 }
             }
             else if(s[k]=='*'){
                 flag = false;
                 vector<int> left = solve(s,i,k-1);
                 vector<int> right = solve(s,k+1,e);
                 for(auto x: left){
                     for(auto y: right){
                        ans.push_back(x*y); 
                     }
                  }
               }

             else if(s[k]=='-'){
                 flag = false;
                 vector<int> left = solve(s,i,k-1);
                 vector<int> right = solve(s,k+1,e);
                 for(auto x: left){
                     for(auto y: right){
                        ans.push_back(x-y); 
                     }
                 }
             }
        }
        
        if(flag){
           int a = 0;
           for(int j = i ; j<=e ; j++){
              a = a*10+int(s[j]-'0');
           } 
          ans.push_back(a);
        }
        return ans;
    }
    vector<int> diffWaysToCompute(string expression) {
          int n = expression.size();
          return solve(expression,0,n-1);
    }
};